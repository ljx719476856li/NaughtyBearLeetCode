#include <iostream>
using namespace std;

/*
题目：已知一棵完全二叉树，求其节点的个数。要求时间复杂度低于O(N),N为这颗二叉树的节点数
思路：通过分别遍历二叉树左右边界，分别获得信息，左子树的层级(通过遍历左子树获得)，右子树的层级(通过遍历右子树获得)
	(1) 首先遍历该树的左边界，获得左子树高度
		i). 因为该树是完全二叉树，所以完全遍历完这棵树的左边界，即可获得高度
	(2) 然后遍历该树的右边界，同理，获得右边界层级
		i). 如果右边界层级等于左边界层级，则左子树一定是满二叉树
		ii). 如果右边界层级不能到达左边界层级，则左子树不一定是满二叉树，但右子树一定是满二叉树
	(3) 通过满足不同条件，有不同的处理结果
		i). 满足条件i)，则可求出左子树的节点个数为2^n - 1(n为左子树的层级数)，然后再递归去求右子树的节点个数
		i). 满足条件ii)，则可求出右子树的节点个数为2^n(n为右子树的节点个数)，然后再去递归求左子树的节点个数
	
*/

class CBTNodeNum
{


};


int main()
{

}